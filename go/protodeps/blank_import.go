// blank_import - create a Go source file that blank-imports a set of packages
//
// usage: blank_import PKG_NAME <PKG_LIST >GO_SRC
//
// Blank imports, that is, imports aliased to the blank identifier such as
//
//	import _ "my-pkg"
//
// allow packages to be dependend upon even when they are not used in the implementation.
// This can be useful when dependencies are necessary, but not visible from checked-in Go sources.
package main

import (
	"bufio"
	"log"
	"os"
	"text/template"
)

var (
	tmpl = template.Must(template.New("").Parse(`
{{- /**/ -}}
// Code generated by go/protodeps/blank_import. DO NOT EDIT.
package {{ .Package }}

import (
{{- range .Imports }}
	_ "{{ . }}"
{{- end }}
)
`))
)

func main() {
	if len(os.Args) != 2 {
		log.Fatal("usage: blank_import PKG_NAME <PKG_LIST >GO_SRC")
	}
	pkgName := os.Args[1]

	scanner := bufio.NewScanner(os.Stdin)
	var imports []string
	for scanner.Scan() {
		imports = append(imports, scanner.Text())
	}
	if err := scanner.Err(); err != nil {
		log.Fatal(err)
	}

	data := struct {
		Package string
		Imports []string
	}{
		Package: pkgName,
		Imports: imports,
	}

	err := tmpl.Execute(os.Stdout, data)
	if err != nil {
		log.Fatal(err)
	}
}
